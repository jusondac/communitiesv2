c
Payment.create!(
        payer: payer,
        receiver: receiver,
        amount: amount,
        category: category,
        status: status,
        payment_method: payment_method,
        )
 update_balance(payer, receiver, amount)
 c
c
receiver.update(balance: (receiver.balance += amount))
receiver
payer
 payer.update(balance: (payer.balance -= amount))
 payer.update(balance: (balance -= amount))
 payer.update(balance: balance -= amount)
c
receiver = is_community==1 ? Community.find_by(id: params[:receiver_id]).finance : User.find_by(id: params[:receiver_id])&.finance
is_community.eql?(1) ? "wkwk" : "lol"
is_community.eql?(0) ? "wkwk" : "lol"
is_community ? "wkwk" : "lol"
is_community ? Community.find_by(id: params[:receiver_id]).finance : User.find_by(id: params[:receiver_id])&.finance
User.find_by(id: params[:receiver_id])&.finance
params[:receiver_id]
is_community
receiver = is_community ? Community.find_by(id: params[:receiver_id]).finance : User.find_by(id: params[:receiver_id])&.finance
receiver
c
is_community ? "wkwk" : "lol"
is_community
is_community ? Community.find_by(id: params[:receiver_id]).finance : User.find_by(id: params[:receiver_id])&.finance
User.find_by(id: params[:receiver_id])&.finance
receiver = is_community ? Community.find_by(id: params[:receiver_id]).finance : User.find_by(id: params[:receiver_id])&.finance
is_community
receiver
c
is_community
receiver = User.find(params[:receiver_id])&.finance&.id if is_community
receiver
payer
amount
 update_balance(payer, receiver, amount)
c
update_balance(payer, receiver, amount)
payer
update_balance(payer, receiver, amount)
update_balance
c
    payment_method = PaymentMethod.find_by(name: "App") || PaymentMethod.first
PaymentMethod.all
PaymentMethod.first
c
PaymentMethod
PaymentMethod.all
ap Payment
ap _
Payment
payer
user
params
c
params
c
params
c
params
param
is_community = params[:is_community].to_i
is_community
is_communit
params
c
params
c
Current.user
params[:amount]
params[:amout]
params
new
c
params
FinanceService.send_money(params)
params
c
params
prams
c
params
c
Finance.create!(balance: 100, is_community: false)
user.finance
user
finance = Finance.create(balance: 100, is_community: false)
    user.update(finance: finance)
Finance
ap User
User
ap Finance
c
ap Finance
ap _
Finance
c
user.payment_transaction
c
Finance.create(balance: 100, user: user, payment_transaction: user.payment_transaction)
ap Finance
ap _
Finance
Finance.create!(balance: 0, payment_transaction: user.payment_transaction, user: user)
Finance.create!(balance: 0, payment_transaction: user.payment_transaction, user: user) unless user.finance
finance
user.payment_transaction
PaymentTransaction.all.count
PaymentTransaction.all
user.payment_transaction
user
c
PaymentTransaction.where(user: user)
payment_transaction = PaymentTransaction.create!(user: user, is_community: false) unless user.payment_transactions.exists?
c
user.payment_transaction
payment_transaction = PaymentTransaction.create!(user: user, is_community: false) unless user.payment_transactions.exists?
